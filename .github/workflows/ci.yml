name: CI - Dev Build

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
      timeout-minutes: 5
    
    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
      
    - name: Run security tests
      run: bun run src/security.test.ts
      
    - name: Build project
      run: bun run build
      
    - name: Test server startup
      run: timeout 5s bun run start || echo "Server startup test completed"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dev-build-${{ github.sha }}
        path: |
          dist/
          package.json
          README.md
        retention-days: 30

  dev-release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    name: Create Dev Release
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
      timeout-minutes: 5
    
    - name: Cache Bun dependencies
      uses: actions/cache@v3
      with:
        path: ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    - name: Install dependencies
      run: bun install
      
    - name: Build project
      run: bun run build
      
    - name: Get commit info
      id: commit
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        echo "commit_message=$(git log -1 --pretty=%B | head -n 1)" >> $GITHUB_OUTPUT
        echo "timestamp=$(date -u +"%Y%m%d-%H%M%S")" >> $GITHUB_OUTPUT
    
    - name: Create dev release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: dev-${{ steps.commit.outputs.timestamp }}-${{ steps.commit.outputs.sha_short }}
        name: "Dev Build - ${{ steps.commit.outputs.commit_message }}"
        body: |
          üöß **Development Build** - Not for production use
          
          **Commit**: ${{ github.sha }}
          **Branch**: ${{ github.ref_name }}
          **Built**: ${{ steps.commit.outputs.timestamp }}
          
          ### Changes
          ${{ steps.commit.outputs.commit_message }}
          
          ### Installation
          ```bash
          # Download the server.js file from assets below
          # Run with: bun run server.js
          ```
          
          ### ‚ö†Ô∏è Notice
          This is an automated development build. For production use, please use the latest stable release.
        draft: false
        prerelease: true
        files: |
          dist/server.js
          package.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}