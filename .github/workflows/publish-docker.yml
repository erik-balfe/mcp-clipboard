name: Publish Docker Image

on:
  workflow_run:
    workflows: ["Publish to JSR"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build Docker image for'
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract version from tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Building Docker image for version: $VERSION"
      
      - name: Set version from input
        if: github.event.inputs.version
        run: |
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "Building Docker image for version: ${{ github.event.inputs.version }}"
      
      - name: Set default version
        if: env.VERSION == ''
        run: |
          echo "VERSION=latest" >> $GITHUB_ENV
          echo "Building Docker image for version: latest"
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: '1.2.18'
      
      - name: Install dependencies
        run: bun install
      
      - name: Update version in Dockerfile
        run: |
          VERSION_TO_USE="${{ env.VERSION }}"
          if [ -z "$VERSION_TO_USE" ]; then
            VERSION_TO_USE="latest"
          fi
          sed -i "s/LABEL version=\"[^\"]*\"/LABEL version=\"$VERSION_TO_USE\"/" Dockerfile
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ env.VERSION }},enable=${{ env.VERSION != 'latest' }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Test Docker image
        run: |
          echo "Testing Docker image..."
          docker run --rm ghcr.io/${{ github.repository }}:${{ env.VERSION }} bun --version
      
      - name: Create deployment instructions
        run: |
          cat > DEPLOY.md << 'EOF'
          # Quick Deploy Guide
          
          ## Using Docker Run
          ```bash
          docker run -d --name mcp-clipboard \
            --restart unless-stopped \
            -v $(pwd)/data:/app/data \
            -v $HOME:/host/home:ro \
            -v $(pwd):/host/pwd:rw \
            ghcr.io/${{ github.repository }}:${{ env.VERSION }}
          ```
          
          ## MCP Configuration
          ```json
          {
            "mcpServers": {
              "clipboard": {
                "command": "docker",
                "args": ["exec", "-i", "mcp-clipboard", "bun", "run", "src/server.ts"]
              }
            }
          }
          ```
          EOF
      
      - name: Summary
        run: |
          echo "## 🐳 Docker Images Published Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Available Images:" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:${{ env.VERSION }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`ghcr.io/${{ github.repository }}:latest\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Start:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "docker run -d --name mcp-clipboard \\" >> $GITHUB_STEP_SUMMARY
          echo "  -v \$(pwd)/data:/app/data \\" >> $GITHUB_STEP_SUMMARY
          echo "  ghcr.io/${{ github.repository }}:${{ env.VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Package Sources:" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 JSR: [@tyr/mcp-clipboard](https://jsr.io/@tyr/mcp-clipboard)" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 Docker: [ghcr.io/${{ github.repository }}](https://ghcr.io/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY